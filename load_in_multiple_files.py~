import numpy as np
import iris
import matplotlib.pyplot as plt
import iris.quickplot as qplt
import matplotlib.cm as mpl_cm
import iris.plot as iplt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import glob
import iris
from iris.util import unify_time_units
import numpy as np
import matplotlib.pyplot as plt
import iris.quickplot as qplt
import matplotlib.cm as mpl_cm
import iris.plot as iplt
import cartopy.crs as ccrs

def plot_daily_cycle(data):
	fig=plt.figure()
	plt.plot(data)
	plt.grid()
	plt.title('daily cycle for specific gridpoint')
	plt.show()
	
def plot_map(data):
	#new plot with filled contours
	qplt.contourf(data)
	plt.gca().coastlines() #add coastlines
	plt.show()

#files=glob.glob('/net/home/h01/vportge/CM_SAF/test_data/ORD28974_europe/ORD28974/*.nc')
#files=glob.glob('/home/h01/vportge/CM_SAF/test_data/ORD28974_europe/test/*.nc')
files=glob.glob('/scratch/vportge/CM_SAF_data_metadata_changed/test_data/ORD28974_europe/test/*.nc')
files.sort()
#calculate number of daily files in directory, as there are only the hourly files
monthlength=int(len(files)/24)
print(monthlength) 
for d in range(0, monthlength):
	hourly_data_path=files[d*24:d*24+24] #one day consists of 24 hours. So take the first 24 files for the first day and so on.
	hourly_data=iris.load(hourly_data_path, 'Land Surface Temperature (PMW)') 
	day_data=hourly_data.concatenate_cube() #concatenate the hourly data into one cube with dimensions (time: 24; latitude: 856; longitude: 2171)


	#new plot with filled contours
	plot_map(day_data[0,:,:])	
	
	#plot daily cycle:
	plot=plot_daily_cycle(day_data.data[:,179,1592])



	
#day_array=np.zeros((24, 856, 2171))
#for i in range(0,24):
	#day_array[i,:,:]=hourly_data[i].data
#np.ma.masked_where(day_array==-32767. , day_array)


	


#day=str('{:02}'.format(d))
#print(day)
#filepath='/net/home/h01/vportge/CM_SAF/test_data/ORD28974_europe/ORD28974/LTPin201511'+day+'*.nc'
#print(filepath)
