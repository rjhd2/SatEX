do_CM_SAF_analysis.py:
Takes original CM SAF data (metadata changed), computes local time for each gridpoint, and decides which hours shall be used for the warm and cold window. 
Computes LSTwarm_max, LSTcold_min, LSTcold_max (min/max LST in cold/warm window) and takes the uncertainties for each value. It saves LST, uncertainty, SATID (satellite ID of earliest hour) and observation times of min/max LST in warm/cold window to a netCDF file which gets compressed (zlib = True). (location: /scratch/vportge/CM_SAF_LST_MIN_MAX/)
SPICE script:
analyse_CM_SAF_SPICE.bash
which creates a SPICE script for each year and month. 
Plotting routine is turned off, as for plotting the next programme is used:



plot_CM_SAF_LST_min_max.py:
This programme takes the LST min/max netCDF files and calculates the coverage (=on how many days do we have data?) and plots maps of coverage and the averaged values theirselves. It also saves the coverage to netCDF files which is turned off at the moment). Location: /scratch/vportge/CM_SAF_LST_MIN_MAX/COVERAGE/ for each season. 
SPICE script:
plot_CM_SAF_coverage_SPICE.bash 
matplotlib.use('Agg') is set. 


plot_coverage_from_netCDF_files.py:
Produces plots of the coverage using the saved netCDF files (produced by plot_CM_SAF_LST_min_max.py).


merge_files.py:
Takes daily files and makes yearly files out of it with a precipitation variable which contains no data. But just that Climpact has everything it needs. Saved to compressed netCDF.
SPICE:
spice.bash
or spice_for_lst_min.bash
both in scratch


split_yearly_files_to_tiles.py:
This takes the yearly files and merges them all together to one big file for the whole 25 year period. Saves to compressed netCDF files. 
Saves to different tiles to split up the whole region.
SPICE:
spice_for_different_years.bash but that's not the one where the tiles where used. 


median_pairwise_slopes.py:
contains a function for calculating the slope of a trend using the Theil-Sen-algorithm.

plot_climpact_indices.py:
Plots a time series of the averaged climpact indices. 



load_in_hadex_nc_files.py:
For analysing HadEX files and plotting maps of their data or time series. 

load_in_ecad_data.py:
For analysing ECA&D data and plotting maps or time series. 

plot_ghcndex_indices.py:
Loads GHCNDEX index values and plots time series with trend and maps of averaged values and maps of trends.

compute_indices.py:
Computes some monthly climate extreme indices (TXx, TNx, TXn, TNn, DTR, FD, TR) and saves them to netCDF files. Those monthly files can be used for calculating annual values. 


plot_python_indices.py:
Plots indices that were created using the python code 'compute_indices.py'

